##############  counter ######################################################################################
# 这是一个简单的mips汇编语言编写的计数程序，用户输入一个整数n，则程序一次输出从1到n的整数，输出一个换行一次。
# 程序具有简单的错误处理功能。
########## 10-20-2008  ###########################################################################################

#------------代码 segment-------------------#

.text
.globl main
         
error:                               # 错误处理，若输入整数不再指定范围内，从新输入
    li      $v0,   4                 # 打印字符串，输出
    la      $a0,   errormsg          # 取字符串errormsg首地址->$a0
    syscall                          # 系统调用

    j get                            # 转重新输入
         
main:
    addi    $s0,   $zero,  21        # 初始化 $s0=21,规定输出的数据小于这个数
get:
    li      $v0,   4                 # 打印字符串，输出
    la      $a0,   str1
    syscall

    li      $v0,   5                 # 接收键盘输入一整数（作为上届），接收到的数据存放在$v0中
    syscall
         
    slt     $s1,   $v0,   $s0        # 判断输入整数是否在范围内(1-20)，如果$v0<$s0,则$s1=1，否则$s1=0(超出范围)
    beq     $s1,   $zero, error      # 如果$s1=0(超出范围)，则转error出错处理
    blez    $v0,   error             # 如果输入的整数$v0<=0，不在范围1-20内，则转error出错处理
         
    move    $t0,   $v0               # 将输入的数（上界）保存在$t0

    add     $t1,   $0,  $0           # 初始化$t1=0,初始化计数器

loop:
    addi    $t1,    $t1,   1         # $t1<-$t1+1
    li      $v0,    1                # 打印整数，输出一整数
    move    $a0,    $t1              # 将输出的数据保存到$a0，为输出做准备
    syscall                          # 系统调用

    la      $a0,    nline            # 换行符，"\n"          
    li      $v0,    4                # 换新一行输出
    syscall
    
    slt     $t2,    $t1,   $t0       # 如果$t1<$t0，$t2=1，未达上届，否则，$t2=0，已达上届
    bnez    $t2,    loop             # 如果$t2!=0，转loop，继续循环输出，否则，顺序执行，然后结束

    li      $v0,    10               # 退出，返回系统
    syscall

#-------------------数据 segment--------------------#       

.data
   str1:
       .asciiz "please give an integer from 1 to 20: "
   errormsg:
       .asciiz "out of range(1 to 20)\n" # 字符串定义，.asciiz类型定义字符串，最后以"00"字符作为终止符结束
   nline:  
       .asciiz "\n"    

###----end of file     