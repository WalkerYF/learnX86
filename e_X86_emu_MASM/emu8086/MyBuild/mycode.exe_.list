EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
mycode.exe_ -- emu8086 assembler version: 4.08  
 
[ 2017/9/30 星期六  --  上午 12:09:00 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ; multi-segment executable file template.
[   2]        :                                       
[   3]        :                                       data segment
[   4]    0000: 0A                                    A DB 10
[   5]    0001: F6 15 20 FF E9 46 16 DF 65 88         BLOCK DB -10,15H,20H,-1,-23,46H,16H,-33,65H,88H
[   6]        :                                       ends
[   7]        :                                       
[   8]        :                                       code segment
[   9]        :                                       ASSUME DS:DATA, CS:CODE
[  10]    0010: B8 00 00                              START: MOV AX, DATA
[  11]    0013: 8E D8                                 MOV DS, AX
[  12]    0015: BE 01 00                              MOV SI, OFFSET BLOCK
[  13]    0018: B9 0A 00                              MOV CX, 10
[  14]    001B: 8A 04                                 AGAIN: MOV AL, [SI]
[  15]    001D: A8 80                                 TEST AL, 80H ;测试是否为正数
[  16]    001F: 74 04                                 JZ NEXT
[  17]    0021: F6 D8                                 NEG AL ;求负数的绝对值
[  18]    0023: 88 04                                 MOV [SI], AL
[  19]    0025: 46                                    NEXT: INC SI
[  20]    0026: E2 F3                                 LOOP AGAIN
[  21]    0028: B4 4C                                 MOV AH, 4CH ;返回DOS
[  22]    002A: CD 21                                 INT 21H
[  23]        :                                       CODE ENDS
[  24]        :                                       END START
[  25]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 2C      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 66      -   check sum (l.byte)
0013: 02      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 01      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 01      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
